{"ast":null,"code":"import _slicedToArray from \"/Users/fredhertlein/Documents/GitHub/gpt2-react-flask/gpt-2-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport axios from 'axios';\nconst ENDPOINT_URL = \"http://localhost:5000/generate\";\n\nconst useAsyncEndpoint = fn => {\n  const _React$useState = React.useState({\n    data: null,\n    complete: false,\n    pending: false,\n    error: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        res = _React$useState2[0],\n        setRes = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        req = _React$useState4[0],\n        setReq = _React$useState4[1];\n\n  React.useEffect(() => {\n    if (!req) return;\n    setRes({\n      data: null,\n      pending: true,\n      error: false,\n      complete: false\n    });\n    axios(req).then(res => setRes({\n      data: res.data,\n      pending: false,\n      error: false,\n      complete: true\n    })).catch(() => setRes({\n      data: null,\n      pending: false,\n      error: true,\n      complete: true\n    }));\n  }, [req]);\n  return [res, (...args) => setReq(fn(...args))];\n};\n\nexport const postGenerateTextEndpoint = () => {\n  /* eslint-disable react-hooks/rules-of-hooks */\n  return useAsyncEndpoint(data => ({\n    url: ENDPOINT_URL,\n    method: \"POST\",\n    data\n  }));\n};","map":{"version":3,"sources":["/Users/fredhertlein/Documents/GitHub/gpt2-react-flask/gpt-2-frontend/src/utils.js"],"names":["React","axios","ENDPOINT_URL","useAsyncEndpoint","fn","useState","data","complete","pending","error","res","setRes","req","setReq","useEffect","then","catch","args","postGenerateTextEndpoint","url","method"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,gCAArB;;AAEA,MAAMC,gBAAgB,GAAGC,EAAE,IAAI;AAAA,0BACLJ,KAAK,CAACK,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,QAAQ,EAAE,KAAxB;AAA+BC,IAAAA,OAAO,EAAE,KAAxC;AAA+CC,IAAAA,KAAK,EAAE;AAAtD,GAAf,CADK;AAAA;AAAA,QACpBC,GADoB;AAAA,QACfC,MADe;;AAAA,2BAELX,KAAK,CAACK,QAAN,EAFK;AAAA;AAAA,QAEpBO,GAFoB;AAAA,QAEfC,MAFe;;AAI3Bb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClB,QAAI,CAACF,GAAL,EAAU;AACVD,IAAAA,MAAM,CAAC;AAAEL,MAAAA,IAAI,EAAE,IAAR;AAAcE,MAAAA,OAAO,EAAE,IAAvB;AAA6BC,MAAAA,KAAK,EAAE,KAApC;AAA2CF,MAAAA,QAAQ,EAAE;AAArD,KAAD,CAAN;AACAN,IAAAA,KAAK,CAACW,GAAD,CAAL,CACKG,IADL,CACUL,GAAG,IACLC,MAAM,CAAC;AAAEL,MAAAA,IAAI,EAAEI,GAAG,CAACJ,IAAZ;AAAkBE,MAAAA,OAAO,EAAE,KAA3B;AAAkCC,MAAAA,KAAK,EAAE,KAAzC;AAAgDF,MAAAA,QAAQ,EAAE;AAA1D,KAAD,CAFd,EAIKS,KAJL,CAIW,MACHL,MAAM,CAAC;AAAEL,MAAAA,IAAI,EAAE,IAAR;AAAcE,MAAAA,OAAO,EAAE,KAAvB;AAA8BC,MAAAA,KAAK,EAAE,IAArC;AAA2CF,MAAAA,QAAQ,EAAE;AAArD,KAAD,CALd;AAOH,GAVD,EAUG,CAACK,GAAD,CAVH;AAYA,SAAO,CAACF,GAAD,EAAM,CAAC,GAAGO,IAAJ,KAAaJ,MAAM,CAACT,EAAE,CAAC,GAAGa,IAAJ,CAAH,CAAzB,CAAP;AACH,CAjBD;;AAmBA,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC1C;AACA,SAAOf,gBAAgB,CAACG,IAAI,KAAK;AAAEa,IAAAA,GAAG,EAAEjB,YAAP;AAAqBkB,IAAAA,MAAM,EAAE,MAA7B;AAAqCd,IAAAA;AAArC,GAAL,CAAL,CAAvB;AACH,CAHM","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst ENDPOINT_URL = \"http://localhost:5000/generate\";\n\nconst useAsyncEndpoint = fn => {\n    const [res, setRes] = React.useState({ data: null, complete: false, pending: false, error: false });\n    const [req, setReq] = React.useState();\n\n    React.useEffect(() => {\n        if (!req) return;\n        setRes({ data: null, pending: true, error: false, complete: false });\n        axios(req)\n            .then(res =>\n                setRes({ data: res.data, pending: false, error: false, complete: true })\n            )\n            .catch(() =>\n                setRes({ data: null, pending: false, error: true, complete: true })\n            );\n    }, [req]);\n\n    return [res, (...args) => setReq(fn(...args))];\n}\n\nexport const postGenerateTextEndpoint = () => {\n    /* eslint-disable react-hooks/rules-of-hooks */\n    return useAsyncEndpoint(data => ({ url: ENDPOINT_URL, method: \"POST\", data }));\n}"]},"metadata":{},"sourceType":"module"}